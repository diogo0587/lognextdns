name: Build Hugo Site with NextDNS Logs and Deploy to Pages

on:
  schedule:
    - cron: '0 0 * * *'  # Executa diariamente à meia-noite
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Verify Hugo version
        run: hugo version

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch NextDNS logs and generate Hugo content
        env:
          NEXTDNS_API_KEY: ${{ secrets.NEXTDNS_API_KEY }}
          NEXTDNS_PROFILE_ID: ${{ secrets.NEXTDNS_PROFILE_ID }}
        run: |
          mkdir -p content/posts
          python3 - <<EOF
          import os
          import requests
          from datetime import datetime

          api_key = os.environ['NEXTDNS_API_KEY']
          profile_id = os.environ['NEXTDNS_PROFILE_ID']

          if not api_key or not profile_id:
              raise Exception("NEXTDNS_API_KEY e/ou NEXTDNS_PROFILE_ID não definidos.")

          url = f'https://api.nextdns.io/profiles/{profile_id}/logs'
          headers = {'X-Api-Key': api_key}
          response = requests.get(url, headers=headers)

          if response.status_code != 200:
              raise Exception(f"Erro ao buscar logs NextDNS: {response.status_code} {response.text}")

          logs = response.json().get('data', [])
          if not logs:
              print("Nenhum log encontrado.")
              exit(0)

          # Index file
          with open('content/_index.md', 'w') as f:
              f.write("""---
          title: "NextDNS Logs Dashboard"
          ---
          Bem-vindo ao Dashboard de Logs do NextDNS. Abaixo estão as entradas de log mais recentes.
          """)

          # Create latest log posts (30 or as many as available)
          for i, log in enumerate(logs[:30]):
              post_content = f'''---
          title: "Log Entry {i+1}"
          date: {datetime.now().isoformat()}
          domain: "{log.get('domain', 'N/A')}"
          status: "{log.get('status', 'N/A')}"
          timestamp: "{log.get('timestamp', 'N/A')}"
          ---
          '''
              with open(f'content/posts/log-{i+1}.md', 'w') as post_file:
                  post_file.write(post_content)
          EOF

      - name: Setup Hugo site config and theme
        run: |
          if [ ! -f "config.toml" ]; then
            hugo new site . --force
          fi
          if [ ! -d "themes/ananke" ]; then
            git clone https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
          fi
          cat <<EOT > config.toml
          theme = "ananke"
          baseURL = "https://${GITHUB_REPOSITORY_OWNER}.github.io"
          [pagination]
            pagerSize = 10
          EOT

      - name: Build Hugo site
        run: hugo --minify

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: './public'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
