# NextDNS Log Sync

on:
  schedule:
    - cron: '15 */6 * * *' # Executa a cada 6 horas (offset para evitar sobrecarga)
  workflow_dispatch: # Permite execu√ß√£o manual

permissions:
  contents: write
  
env:
  NEXTDNS_PROFILE_ID: '85d564'

jobs:
  sync-logs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create logs directory
        run: mkdir -p logs
        
      - name: Fetch NextDNS Logs
        run: |
          DATE=$(date +'%Y-%m-%d')
          LOG_FILE="logs/nextdns_log_${DATE}.json"
          
          # Fazer request com retry em caso de falha
          for attempt in 1 2 3; do
            if curl -s -f \
              -H "X-Api-Key: ${{ secrets.NEXTDNS_API_KEY }}" \
              -H "Accept: application/json" \
              "https://api.nextdns.io/profiles/${NEXTDNS_PROFILE_ID}/logs" \
              -o "$LOG_FILE"; then
              echo "‚úÖ Logs fetched successfully on attempt $attempt"
              break
            else
              echo "‚ùå Attempt $attempt failed, retrying..."
              sleep 5
            fi
            
            if [ $attempt -eq 3 ]; then
              echo "‚ùå Failed to fetch logs after 3 attempts"
              exit 1
            fi
          done
          
          # Verificar se o arquivo foi criado e n√£o est√° vazio
          if [ ! -s "$LOG_FILE" ]; then
            echo "‚ùå Log file is empty or doesn't exist"
            exit 1
          fi
          
          echo "‚úÖ Log file created: $LOG_FILE ($(wc -l < "$LOG_FILE") lines)"
          
      - name: Process and validate logs
        run: |
          DATE=$(date +'%Y-%m-%d')
          LOG_FILE="logs/nextdns_log_${DATE}.json"
          
          # Verificar se √© JSON v√°lido
          if ! jq empty "$LOG_FILE" 2>/dev/null; then
            echo "‚ùå Invalid JSON in log file"
            exit 1
          fi
          
          # Extrair estat√≠sticas b√°sicas
          TOTAL_ENTRIES=$(jq '.data | length' "$LOG_FILE" 2>/dev/null || echo "0")
          echo "üìä Total log entries: $TOTAL_ENTRIES"
          
          # Criar arquivo de resumo
          jq -r '{
            total_entries: .data | length,
            timestamp: now | todate,
            domains: [.data[].name] | unique | length,
            blocked: [.data[] | select(.status == "blocked")] | length
          }' "$LOG_FILE" > "logs/summary_${DATE}.json"

      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add logs/
          
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è  No changes to commit"
            exit 0
          fi
          
          git commit -m "üìä Update NextDNS logs for $(date +'%Y-%m-%d')" \
                     -m "Automated log sync via GitHub Actions"
          git push
          
      - name: Cleanup old logs (optional)
        run: |
          # Manter apenas os √∫ltimos 30 dias de logs
          find logs/ -name "nextdns_log_*.json" -mtime +30 -delete || true
          find logs/ -name "summary_*.json" -mtime +30 -delete || true
