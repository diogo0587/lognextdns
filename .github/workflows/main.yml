name: NextDNS Log Collector

on:
  schedule:
    - cron: '0 0 * * *' # Executa diariamente à meia-noite UTC

jobs:
  collect-logs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run NextDNS Log Collector
      run: |
        cat > nextdns_log_collector.py <<'EOF'
        import requests
        import csv
        from datetime import datetime, timedelta

        # Configurações
        api_key = "1f31f2871d328a52a45fefadc09a1c67d0dd5d53d"
        profile_id = "85d564"
        output_csv = "/var/log/nextdns_logs.csv"
        fetch_interval = 86400  # Intervalo de coleta em segundos (1 dia)

        # Função para coletar logs
        def collect_logs():
            yesterday = (datetime.utcnow() - timedelta(days=1)).strftime('%Y-%m-%dT%H:%M:%S') + 'Z'
            now = datetime.utcnow().strftime('%Y-%m-%dT%H:%M:%S') + 'Z'
            url = f"https://api.nextdns.io/profiles/{profile_id}/logs/download?from={yesterday}&to={now}&limit=500"
            headers = {"X-Api-Key": api_key}
            response = requests.get(url, headers=headers)
            if response.status_code == 200:
                logs = response.json()
                save_logs_to_csv(logs, profile_id)

        # Função para salvar logs em CSV
        def save_logs_to_csv(logs, profile_id):
            with open(output_csv, "a", newline="") as csvfile:
                fieldnames = ["timestamp", "profile", "log"]
                writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
                
                # Escrever cabeçalho apenas na primeira vez
                if csvfile.tell() == 0:
                    writer.writeheader()

                for log in logs:
                    writer.writerow({
                        "timestamp": datetime.now().isoformat(),
                        "profile": profile_id,
                        "log": log
                    })

        # Coletar logs
        collect_logs()
        EOF
        python nextdns_log_collector.py
