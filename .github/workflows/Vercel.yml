name: NextDNS Log Sync

on:
  schedule:
    - cron: '0 */6 * * *'  # Executa a cada 6 horas
  workflow_dispatch:  # Permite execução manual

jobs:
  sync-nextdns-logs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary

      - name: Fetch and process NextDNS logs
        run: |
          python - <<EOF
          import requests
          import json
          import psycopg2
          from datetime import datetime

          NEXTDNS_API_KEY = "f31f2871d328a52a45fefadc09a1c67d0dd5d53d"
          NEXTDNS_PROFILE_ID = "85d564"
          DB_URL = "postgres://default:0jBoHRKeQkP8@ep-blue-sky-a4giv1wk.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require"

          def obter_logs_nextdns():
              url = f"https://api.nextdns.io/profiles/{NEXTDNS_PROFILE_ID}/logs"
              headers = {"X-Api-Key": NEXTDNS_API_KEY}
              response = requests.get(url, headers=headers)
              return response.json()["data"]

          def inserir_logs(cur, logs):
              for log in logs:
                  cur.execute("""
                  INSERT INTO nextdns_logs (timestamp, domain, root, tracker, encrypted, protocol, client_ip, status, reasons)
                  VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
                  """, (
                      datetime.fromisoformat(log['timestamp'].replace('Z', '+00:00')),
                      log['domain'],
                      log['root'],
                      log.get('tracker', ''),
                      log['encrypted'],
                      log['protocol'],
                      log['clientIp'],
                      log['status'],
                      json.dumps(log.get('reasons', []))
                  ))

          try:
              logs = obter_logs_nextdns()
              conn = psycopg2.connect(DB_URL)
              cur = conn.cursor()
              inserir_logs(cur, logs)
              conn.commit()
              print(f"Processados {len(logs)} registros de log.")
          except Exception as e:
              print(f"Erro: {e}")
          finally:
              if 'cur' in locals():
                  cur.close()
              if 'conn' in locals():
                  conn.close()
          EOF

      - name: Commit and push if there are changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Atualizar logs do NextDNS" && git push)
