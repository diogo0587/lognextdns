name: NextDNS Logs Sync

on:
  schedule:
    - cron: '0 */6 * * *'  # Executa a cada 6 horas
  workflow_dispatch:  # Permite execução manual

jobs:
  sync-nextdns-logs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary

      - name: Fetch and process NextDNS logs
        env:
          NEXTDNS_API_KEY: ${{ secrets.NEXTDNS_API_KEY }}
          NEXTDNS_PROFILE_ID: "85d564"
          DB_URL: "postgres://default:0jBoHRKeQkP8@ep-blue-sky-a4giv1wk.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require"
        run: |
          python - <<EOF
          import requests
          import json
          import psycopg2
          from datetime import datetime

          # Fetch NextDNS logs
          url = f"https://api.nextdns.io/profiles/{['NEXTDNS_PROFILE_ID']}/logs"
          headers = {"X-Api-Key": ['NEXTDNS_API_KEY']}
          response = requests.get(url, headers=headers)
          logs = response.json()["data"]

          # Connect to PostgreSQL
          conn = psycopg2.connect(os.environ['DB_URL'])
          cur = conn.cursor()

          # Create table if not exists
          cur.execute("""
          CREATE TABLE IF NOT EXISTS nextdns_logs (
              id SERIAL PRIMARY KEY,
              timestamp TIMESTAMP,
              domain VARCHAR(255),
              root VARCHAR(255),
              tracker VARCHAR(255),
              encrypted BOOLEAN,
              protocol VARCHAR(50),
              client_ip VARCHAR(50),
              status VARCHAR(50),
              reasons JSONB
          )
          """)

          # Insert logs into database
          for log in logs:
              cur.execute("""
              INSERT INTO nextdns_logs (timestamp, domain, root, tracker, encrypted, protocol, client_ip, status, reasons)
              VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
              """, (
                  datetime.fromisoformat(log['timestamp'].replace('Z', '+00:00')),
                  log['domain'],
                  log['root'],
                  log.get('tracker', ''),
                  log['encrypted'],
                  log['protocol'],
                  log['clientIp'],
                  log['status'],
                  json.dumps(log['reasons'])
              ))

          conn.commit()
          cur.close()
          conn.close()

          print(f"Processed {len(logs)} log entries.")
          EOF

      - name: Generate HTML report
        run: |
          python - <<EOF
          import psycopg2
          import os
          from datetime import datetime

          conn = psycopg2.connect(os.environ['DB_URL'])
          cur = conn.cursor()

          cur.execute("SELECT COUNT(*) FROM nextdns_logs")
          total_logs = cur.fetchone()[0]

          cur.execute("SELECT domain, COUNT(*) FROM nextdns_logs GROUP BY domain ORDER BY COUNT(*) DESC LIMIT 10")
          top_domains = cur.fetchall()

          cur.execute("SELECT tracker, COUNT(*) FROM nextdns_logs WHERE tracker != '' GROUP BY tracker ORDER BY COUNT(*) DESC LIMIT 10")
          top_trackers = cur.fetchall()

          cur.close()
          conn.close()

          html_content = f"""
          <!DOCTYPE html>
          <html lang="pt-BR">
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>NextDNS Logs Report</title>
          </head>
          <body>
              <h1>NextDNS Logs Report</h1>
              <p>Total logs: {total_logs}</p>
              <h2>Top 10 Domains</h2>
              <ul>
                  {"".join(f"<li>{domain}: {count}</li>" for domain, count in top_domains)}
              </ul>
              <h2>Top 10 Trackers</h2>
              <ul>
                  {"".join(f"<li>{tracker}: {count}</li>" for tracker, count in top_trackers)}
              </ul>
              <p>Generated at: {datetime.now().isoformat()}</p>
          </body>
          </html>
          """

          with open('nextdns_report.html', 'w') as f:
              f.write(html_content)
          EOF

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          destination_dir: reports
          keep_files: true
