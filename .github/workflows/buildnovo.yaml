name: Build & Deploy Hugo site (painel)

on:
  push:
    branches: [gh-pages]        # dispara apenas na branch gh-pages
  workflow_dispatch:            # permite execução manual

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout código
      - uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      # 2. Configuração padrão
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: latest
          extended: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 3. Criar painel e gerar conteúdo dos logs
      - name: Generate NextDNS dashboard content
        env:
          NEXTDNS_API_KEY: ${{ secrets.NEXTDNS_API_KEY }}
          NEXTDNS_PROFILE_ID: ${{ secrets.NEXTDNS_PROFILE_ID }}
        run: |
          mkdir -p painel/content/posts
          cd painel
          cat > content/_index.md <<'EOF'
          ---
          title: "NextDNS Logs Dashboard"
          ---
          Bem-vindo ao Dashboard de Logs do NextDNS.
          EOF

          python <<'PY'
          import os, requests, textwrap, pathlib
          from datetime import datetime
          url = f"https://api.nextdns.io/profiles/{os.getenv('NEXTDNS_PROFILE_ID')}/logs"
          r = requests.get(url,
                           headers={"X-Api-Key": os.getenv("NEXTDNS_API_KEY")},
                           params={"limit":250,"from":"-1h","raw":"1"})
          r.raise_for_status()
          logs = r.json().get("data", [])
          for i, log in enumerate(logs[:30], 1):
              front = textwrap.dedent(f'''\
              ---
              title: "Log {i}"
              date: "{datetime.now().isoformat()}"
              domain: "{log.get('domain','N/A')}"
              status: "{log.get('status','N/A')}"
              timestamp: "{log.get('timestamp','N/A')}"
              ---
              ''')
              pathlib.Path(f"content/posts/log-{i}.md").write_text(front)
          PY

      # 4. Clonar tema Hugo
      - name: Install BeautifulHugo theme
        run: |
          cd painel
          mkdir -p themes
          git clone --depth 1 https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo

      # 5. Criar config.toml
      - name: Write config.toml
        run: |
          cd painel
          cat > config.toml <<'CFG'
          baseURL = "https://diogo0587.github.io/lognextdns/painel/"
          canonifyURLs = true
          languageCode = "pt-br"
          title = "NextDNS Logs"
          theme = "beautifulhugo"
          [pagination]
            pagerSize = 10
          CFG

      # 6. Compilar site
      - name: Build site with Hugo
        run: |
          cd painel
          hugo --minify --destination public

      # 7. Configura e envia para Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v4
        with:
          path: painel/public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy GitHub Pages site
        id: deployment
        uses: actions/deploy-pages@v4